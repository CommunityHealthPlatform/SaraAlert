I"ò@<p>This page documents a set of steps to connect to the Sara Alert FHIR API using the SMART on FHIR Backend Services Workflow as described in  <a href="api-getting-started#smart-on-fhir-backend-services-workflow">Getting Started</a>.</p>

<p><strong>If you are testing against a local instance of Sara Alert, follow all of the instructions below. If you are testing against the demo server, ignore sections with (LOCAL TESTING ONLY), and note that some numbers in the list of instructions will be skipped.</strong></p>

<h2 id="setup-the-environment-local-testing-only">Setup the Environment (LOCAL TESTING ONLY)</h2>
<p>If you are testing on the demo server, skip to the next section.</p>
<details>
<summary>Expand only if testing on a LOCAL instance of Sara Alert</summary>
<div>

    <p><strong>1.</strong> Clone and run Sara Alert following the steps in the <a href="https://github.com/SaraAlert/SaraAlert/blob/master/README.md">README</a> for local setup. Make sure to have the database, Redis, and Sidekiq running for the full experience. At a minimum, the database and Redis need to be running.</p>

    <p><strong>2.</strong> Optionally, connect to the database to query some of the tables as we go through the workflow using <code class="language-plaintext highlighter-rouge">mysql --user=disease_trakker</code></p>
  </div>
</details>

<h2 id="create-a-json-web-key-jwk">Create a JSON Web Key (JWK)</h2>

<p><strong>3.</strong> For this tutorial, use https://mkjwk.org. Create a JWK with the following settings: Key Size <code class="language-plaintext highlighter-rouge">2048</code>, Key Use <code class="language-plaintext highlighter-rouge">Signature</code>, Algorithm <code class="language-plaintext highlighter-rouge">RS384</code>, Key ID <code class="language-plaintext highlighter-rouge">SHA-256</code>, Show X.509 <code class="language-plaintext highlighter-rouge">Yes</code>. Click the ‚ÄúGenerate‚Äù button.</p>

<p><img src="/assets/images/mkjwk.png" alt="mkjwk example" /></p>

<p>Either keep this tool open with the generated values or save off all of the displayed values somewhere:</p>
<ul>
  <li>Public and Private Keypair</li>
  <li>Public and Private Keypair Set</li>
  <li>Public Key</li>
  <li>Private Key (X.509 PEM Format)</li>
  <li>Self-Signed Certificate</li>
  <li>Public Key (X.509 PEM Format)</li>
</ul>

<h2 id="register-a-new-api-client-application-local-testing-only">Register a New API Client Application (LOCAL TESTING ONLY)</h2>
<p>If you are testing on the demo server, skip to the next section.</p>

<details>
<summary>Expand only if testing on a LOCAL instance of Sara Alert</summary>
<div>

    <p><strong>4.</strong> Run the <code class="language-plaintext highlighter-rouge">admin:create_oauth_app_for_backend_services_workflow</code> rake task to both create a new ‚Äúshadow user‚Äù to be used by this new application when creating/updating records, and to create the new OAuth application as well. This rake task requires that you first set an environment variable called <code class="language-plaintext highlighter-rouge">API_FILE_PATH</code> to the path of a json file that contains needed data.</p>

    <p>For example, if there is a file named <code class="language-plaintext highlighter-rouge">api_data.json</code> that looks like the following:</p>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{
  "app_name": "test-m2m-app",
  "email":  "testapp@example.com",
  "jurisdiction_path": "USA",
  "public_key_set": {
    "keys": [&lt;PUBLIC_KEY&gt;]
  },
  "scopes": "system/Patient.* system/Observation.read system/QuestionnaireResponse.read user/Patient.* user/Observation.read user/QuestionnaireResponse.read",
  "redirect_uri": "urn:ietf:wg:oauth:2.0:oob"
}
</code></pre></div>    </div>
    <p>You can then set the environment variable:</p>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>export API_FILE_PATH="path/to/api_data.json"
</code></pre></div>    </div>

    <p>and then run the rake task.</p>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>bundle exec rake admin:create_oauth_app_for_backend_services_workflow
</code></pre></div>    </div>

    <p>You will see the Client ID of the shadow user and OAuth Application as part of the output:</p>
    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Successfully created user with ID &lt;GENERATED_USER_ID&gt; and email testapp@example.com!
Successfully created user with OAuth Application!
Client ID: &lt;GENERATED_CLIENT_ID&gt;
</code></pre></div>    </div>

    <p><strong>5.</strong> OPTIONAL: Verify the application was properly registered by querying the database.</p>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>mysql&gt; select * from oauth_applications;
+----+-----------+--------------------+-----------------------+--------------------------------+-----------------------------------+--------------+----------------------------+----------------------------+---------------------+-----------------+
| id | name      | uid                | secret                | redirect_uri                   | scopes                            | confidential | created_at                 | updated_at                 | public_key_set      | jurisdiction_id |
+----+-----------+--------------------+-----------------------+--------------------------------+-----------------------------------+--------------+----------------------------+----------------------------+---------------------+-----------------+
|  1 | demo      | demo-oauth-app-uid | demo-oauth-app-secret | http://localhost:4000/redirect | user/Patient.*                    |            1 | 2020-06-02 13:22:47.550013 | 2020-06-02 13:22:47.550013 | NULL                |            NULL |
|    |           |                    |                       |                                | user/Observation.read             |              |                            |                            |                     |                 |
|    |           |                    |                       |                                | user/QuestionnaireResponse.read   |              |                            |                            |                     |                 |
|  4 | myTestApp | myTestApp          | &lt;ABRIDGED&gt;            | urn:ietf:wg:oauth:2.0:oob      | system/Patient.*                  |            1 | 2020-09-08 20:15:11.183139 | 2020-09-08 20:15:11.183139 | ---keys: &lt;ABRIDGED&gt; |               1 |
|    |           |                    |                       |                                | system/Observation.read           |              |                            |                            |                     |                 |
|    |           |                    |                       |                                | system/QuestionnaireResponse.read |              |                            |                            |                     |                 |
+----+-----------+--------------------+-----------------------+--------------------------------+-----------------------------------+--------------+----------------------------+----------------------------+---------------------+-----------------+
2 rows in set (0.00 sec)
</code></pre></div>    </div>
  </div>
</details>

<h2 id="request-access-token-create-a-signed-jwt">Request Access Token: Create a Signed JWT</h2>

<p><strong>6.</strong> We need a signed JWT to request an access token. In the tutorial use https://jwt.io/#debugger-io</p>

<p>In the <code class="language-plaintext highlighter-rouge">Decoded</code> section, enter the following <code class="language-plaintext highlighter-rouge">HEADER</code>:</p>

<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"alg"</span><span class="p">:</span><span class="s2">"RS384"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"kid"</span><span class="p">:</span><span class="s2">"&lt;KID FROM PUBLIC KEY&gt;"</span><span class="p">,</span><span class="w">
  </span><span class="nl">"typ"</span><span class="p">:</span><span class="s2">"JWT"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>In the <code class="language-plaintext highlighter-rouge">PAYLOAD</code> section enter:</p>

<p>If using DEMO server:</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>
  <span class="dl">"</span><span class="s2">iss</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">myTestApp</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">sub</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">myTestApp</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">aud</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">http://demo.saraalert.org/oauth/token</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">exp</span><span class="dl">"</span><span class="p">:</span><span class="mi">1599600491</span><span class="p">,</span> <span class="c1">// Make sure this time is in the future otherwise you will see a SignatureExpired error</span>
  <span class="dl">"</span><span class="s2">jti</span><span class="dl">"</span><span class="p">:</span><span class="mi">1599600191</span>
<span class="p">}</span>
</code></pre></div></div>

<details>
<summary> OR: Expand if using LOCAL server</summary>
<div>

    <div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span>
  <span class="dl">"</span><span class="s2">iss</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">myTestApp</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">sub</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">myTestApp</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">aud</span><span class="dl">"</span><span class="p">:</span><span class="dl">"</span><span class="s2">http://localhost:3000/oauth/token</span><span class="dl">"</span><span class="p">,</span>
  <span class="dl">"</span><span class="s2">exp</span><span class="dl">"</span><span class="p">:</span><span class="mi">1599600491</span><span class="p">,</span> <span class="c1">// Make sure this time is in the future otherwise you will see a SignatureExpired error</span>
  <span class="dl">"</span><span class="s2">jti</span><span class="dl">"</span><span class="p">:</span><span class="mi">1599600191</span>
<span class="p">}</span>
</code></pre></div>    </div>
  </div>
</details>

<p><img src="/assets/images/jwtio.png" alt="jwt.io example" /></p>

<p>Set the <code class="language-plaintext highlighter-rouge">"exp"</code> field to be 5 minutes in the future (this is time in seconds since 1 Jan 1970), and set the <code class="language-plaintext highlighter-rouge">"jti"</code> to be random non-repeating number.</p>

<p>In the <code class="language-plaintext highlighter-rouge">VERIFY SIGNATURE</code> field, enter your <code class="language-plaintext highlighter-rouge">PUBLIC KEY</code> and <code class="language-plaintext highlighter-rouge">PRIVATE KEY</code> from the <code class="language-plaintext highlighter-rouge">Public Key (X.509 PEM Format)</code> and <code class="language-plaintext highlighter-rouge">Private Key (X.509 PEM Format)</code> fields that you generated in Step #3.</p>

<p>Copy the JWT from the <code class="language-plaintext highlighter-rouge">Encoded</code> field. It should look garbled like this:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>eyJhbGciOiJSUzM4NCIsImtpZCI6IjNpYlRWLUk0NFppNExza3hIellYeHpVNWpfNThqX0NxRzJiY3lKT0Z1bnciLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJteVRlc3RBcHAiLCJzdWIiOiJteVRlc3RBcHAiLCJhdWQiOiJodHRwOi8vbG9jYWxob3N0OjMwMDAvb2F1dGgvdG9rZW4iLCJleHAiOjE1OTk2MDA0OTEsImp0aSI6MTU5OTYwMDE5MX0.OljK-13DGC6RvpHTgCFG0FgyFsEAlwcWIA8AEtzr_LrMJ8cTCWUYuLWNBR6TL6fiFIeW5vDJJdQ8zDUZC_rOMN-U-_oIulWNTWzEib3re0-ST8s3d1QFaZwgsa53C7m7WKUNvdEoKl5VA-YUjxayKQ3xbjUqR1aTy5IVkWeFi3iV0s1S53I6ZdpmiKP5MgCkXnLlWHehg10k4Ro571iOd54cphsrDueiCQBF7P88CoWsrV3uUhFnFSBR53JHWzYDX3-LYVDf1VJB_N8h_maD81MMbmGP7QucsXipQvsAA6G9ZfFzj9trvhRpI-Pk47G7aCca1raGMUja8AySybD0ng
</code></pre></div></div>

<p>We are going to use your JWT in the next step, Request an Access Token.</p>

<h2 id="request-an-access-token-build-request">Request an Access Token: Build Request</h2>

<p><strong>7.</strong> Using Postman, curl, or whatever HTTP library you like request an Access Token‚Ä¶</p>

<p>REQUEST</p>

<p>IF USING DEMO server:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl --location --request POST 'https://demo.saraalert.org/oauth/token' \
     --header 'Content-Type: application/x-www-form-urlencoded' \
     --data-urlencode 'scope=system/Patient.* system/Observation.read system/QuestionnaireResponse.read' \
     --data-urlencode 'grant_type=client_credentials' \
     --data-urlencode 'client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer' \
     --data-urlencode 'client_assertion=&lt;JWT FROM STEP 6&gt;' \
     --data-urlencode 'client_id=myTestApp'
</code></pre></div></div>

<details>
<summary> OR: Expand if using LOCAL server</summary>
<div>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl --location --request POST 'http://localhost:3000/oauth/token' \
     --header 'Content-Type: application/x-www-form-urlencoded' \
     --data-urlencode 'scope=system/Patient.* system/Observation.read system/QuestionnaireResponse.read' \
     --data-urlencode 'grant_type=client_credentials' \
     --data-urlencode 'client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer' \
     --data-urlencode 'client_assertion=&lt;JWT FROM STEP 6&gt;' \
     --data-urlencode 'client_id=myTestApp'
</code></pre></div>    </div>
  </div>
</details>

<p>Make sure you use the proper <code class="language-plaintext highlighter-rouge">client_id</code> and <code class="language-plaintext highlighter-rouge">scope</code> that you registered in previous steps.</p>

<p>RESPONSE</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{
    "access_token": "fXHoedJMq-mdf8cqQvw5a4AY7SOb92McbJvDzNSP5q4",
    "token_type": "Bearer",
    "expires_in": 7200,
    "scope": "system/Patient.* system/Observation.read system/QuestionnaireResponse.read",
    "created_at": 1599601092
}
</code></pre></div></div>
<p>We are going to use the <code class="language-plaintext highlighter-rouge">"access_token"</code> value in API requests.</p>

<h2 id="fhir-requests">FHIR Requests</h2>

<p><strong>8.</strong> Using Postman, curl, or whatever HTTP library you like request some FHIR Resources‚Ä¶</p>

<p>REQUEST</p>

<p>If using DEMO server:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl  --location --request GET 'http://demo.saraalert.org/fhir/r4/Patient/1' \
      --header 'Accept: application/fhir+json' \
      --header 'Authorization: Bearer fXHoedJMq-mdf8cqQvw5a4AY7SOb92McbJvDzNSP5q4'
</code></pre></div></div>

<details>
<summary>OR: Expand if using LOCAL server</summary>
<div>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl  --location --request GET 'http://localhost:3000/fhir/r4/Patient/1' \
      --header 'Accept: application/fhir+json' \
      --header 'Authorization: Bearer fXHoedJMq-mdf8cqQvw5a4AY7SOb92McbJvDzNSP5q4'
</code></pre></div>    </div>
  </div>
</details>

<p>Make sure you replace the token in the example with the token you obtained in Step #7.</p>

<p>The response should be an HTTP 200 with a JSON formatted FHIR Patient.</p>
:ET